import { useState, useEffect, useRef } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useScroll, useTransform, useMotionValueEvent } from 'framer-motion';

const MyPortfolio = () => {
  // State for typewriter effect
  const [aboutTitle, setAboutTitle] = useState("Who Am I?");
  const [projectsTitle, setProjectsTitle] = useState("My Work");
  const [skillsTitle, setSkillsTitle] = useState("What I Know");
  const [contactTitle, setContactTitle] = useState("Let's Connect");

  // State for active section
  const [activeSection, setActiveSection] = useState('home');
  const [isProfileExpanded, setIsProfileExpanded] = useState(false);

  // Refs for sections
  const homeRef = useRef(null);
  const aboutRef = useRef(null);
  const projectsRef = useRef(null);
  const skillsRef = useRef(null);
  const contactRef = useRef(null);

  // Scroll progress
  const { scrollYProgress } = useScroll();
  const opacityRange = useTransform(scrollYProgress, [0, 0.1, 0.9, 1], [1, 0.2, 0.2, 1]);

  // Typewriter effect
  useEffect(() => {
    const aboutPhrases = ["Who Am I?", "My Story", "Get to Know Me"];
    const projectsPhrases = ["My Work", "Recent Projects", "What I've Built"];
    const skillsPhrases = ["What I Know", "Expertise", "My Toolbox"];
    const contactPhrases = ["Let's Connect", "Reach Out", "Drop a Message"];

    let aboutIndex = 0;
    let projectsIndex = 0;
    let skillsIndex = 0;
    let contactIndex = 0;

    const interval = setInterval(() => {
      aboutIndex = (aboutIndex + 1) % aboutPhrases.length;
      projectsIndex = (projectsIndex + 1) % projectsPhrases.length;
      skillsIndex = (skillsIndex + 1) % skillsPhrases.length;
      contactIndex = (contactIndex + 1) % contactPhrases.length;

      setAboutTitle(aboutPhrases[aboutIndex]);
      setProjectsTitle(projectsPhrases[projectsIndex]);
      setSkillsTitle(skillsPhrases[skillsIndex]);
      setContactTitle(contactPhrases[contactIndex]);
    }, 3000);

    return () => clearInterval(interval);
  }, []);

  // Scroll spy
  useEffect(() => {
    const handleScroll = () => {
      const scrollPosition = window.scrollY + 100;

      if (scrollPosition < aboutRef.current.offsetTop) {
        setActiveSection('home');
      } else if (scrollPosition < projectsRef.current.offsetTop) {
        setActiveSection('about');
      } else if (scrollPosition < skillsRef.current.offsetTop) {
        setActiveSection('projects');
      } else if (scrollPosition < contactRef.current.offsetTop) {
        setActiveSection('skills');
      } else {
        setActiveSection('contact');
      }
    };

    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);

  // Scroll to section
  const scrollToSection = (ref) => {
    window.scrollTo({
      top: ref.current.offsetTop - 80,
      behavior: 'smooth'
    });
  };

  // Floating particles
  const Particle = ({ x, y, size, color }) => {
    return (
      <motion.div
        className="absolute rounded-full"
        style={{
          left: `${x}%`,
          top: `${y}%`,
          width: `${size}px`,
          height: `${size}px`,
          backgroundColor: color,
          boxShadow: `0 0 10px ${color}, 0 0 20px ${color}`
        }}
        animate={{
          y: [0, -20, 0],
          opacity: [0.8, 1, 0.8],
        }}
        transition={{
          duration: Math.random() * 5 + 5,
          repeat: Infinity,
          ease: "easeInOut"
        }}
      />
    );
  };

  const particles = Array.from({ length: 20 }).map((_, i) => ({
    x: Math.random() * 100,
    y: Math.random() * 100,
    size: Math.random() * 3 + 1,
    color: i % 3 === 0 ? '#00f0ff' : i % 3 === 1 ? '#ff00f0' : '#00ff7f',
    delay: Math.random() * 5
  }));

  // Projects data
  const projects = [
    {
      id: 1,
      title: "E-Commerce Platform",
      description: "A full-stack e-commerce solution with payment integration, inventory management, and analytics dashboard.",
      technologies: ["React", "Node.js", "MongoDB", "Stripe API"],
      image: "/assets/project1.jpg"
    },
    {
      id: 2,
      title: "AI Content Generator",
      description: "Web application that uses GPT-3 to generate marketing content based on user prompts.",
      technologies: ["Next.js", "OpenAI API", "Tailwind CSS", "Firebase"],
      image: "/assets/project2.jpg"
    },
    {
      id: 3,
      title: "Health & Fitness Tracker",
      description: "Mobile app that tracks workouts, nutrition, and provides personalized recommendations.",
      technologies: ["React Native", "GraphQL", "Python", "AWS"],
      image: "/assets/project3.jpg"
    }
  ];

  // Skills data
  const techSkills = [
    { name: "React", level: 95 },
    { name: "JavaScript", level: 90 },
    { name: "Node.js", level: 85 },
    { name: "TypeScript", level: 80 },
    { name: "UI/UX Design", level: 75 },
    { name: "Python", level: 70 }
  ];

  const softSkills = [
    { name: "Problem Solving", icon: "üß©" },
    { name: "Team Leadership", icon: "üë•" },
    { name: "Communication", icon: "üí¨" },
    { name: "Creativity", icon: "üé®" },
    { name: "Time Management", icon: "‚è±Ô∏è" },
    { name: "Adaptability", icon: "üîÑ" }
  ];

  // Testimonials
  const testimonials = [
    {
      id: 1,
      name: "Alex Johnson",
      role: "CTO at TechCorp",
      quote: "Parth delivered our project ahead of schedule with exceptional quality. His attention to detail is unmatched.",
      image: "/assets/testimonial1.jpg"
    },
    {
      id: 2,
      name: "Sarah Williams",
      role: "Product Manager at InnovateCo",
      quote: "Working with Parth was a game-changer for our team. He brings both technical expertise and creative solutions.",
      image: "/assets/testimonial2.jpg"
    },
    {
      id: 3,
      name: "Michael Chen",
      role: "Founder at StartupX",
      quote: "Parth transformed our vision into reality. His ability to understand complex requirements is impressive.",
      image: "/assets/testimonial3.jpg"
    }
  ];

  return (
    <div className="relative min-h-screen bg-[#0D0D0D] text-white overflow-x-hidden">
      {/* Background elements */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        <div 
          className="absolute inset-0 bg-cover bg-center opacity-20"
          style={{ backgroundImage: "url('/assets/bg-blur.jpg')" }}
        />
        {particles.map((particle, i) => (
          <Particle key={i} {...particle} />
        ))}
      </div>

      {/* Scroll indicator */}
      <div className="fixed left-10 top-1/2 transform -translate-y-1/2 h-2/3 w-px bg-gray-700 z-50 hidden md:block">
        <div className="absolute left-1/2 transform -translate-x-1/2 h-full w-0.5 bg-gradient-to-b from-transparent via-cyan-500 to-transparent opacity-70" />
        {['home', 'about', 'projects', 'skills', 'contact'].map((section, i) => (
          <button
            key={section}
            onClick={() => scrollToSection(
              section === 'home' ? homeRef : 
              section === 'about' ? aboutRef :
              section === 'projects' ? projectsRef :
              section === 'skills' ? skillsRef : contactRef
            )}
            className={`absolute left-1/2 transform -translate-x-1/2 rounded-full w-3 h-3 transition-all duration-300 ${activeSection === section ? 'bg-cyan-400 scale-150 shadow-lg shadow-cyan-400/50' : 'bg-gray-500'}`}
            style={{ top: `${i * 25 + 10}%` }}
          />
        ))}
      </div>

      {/* Navbar */}
      <nav className="fixed top-0 left-0 right-0 bg-black bg-opacity-80 backdrop-blur-md z-40 border-b border-gray-800">
        <div className="container mx-auto px-6 py-4 flex justify-between items-center">
          <motion.div
            className="text-2xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ duration: 0.5 }}
          >
            Parth Jansari<span className="text-cyan-400">.</span>
          </motion.div>

          <div className="hidden md:flex space-x-8">
            {['About', 'Projects', 'Skills', 'Contact'].map((item) => (
              <button
                key={item}
                onClick={() => scrollToSection(
                  item === 'About' ? aboutRef :
                  item === 'Projects' ? projectsRef :
                  item === 'Skills' ? skillsRef : contactRef
                )}
                className={`relative px-2 py-1 text-sm font-medium transition-all duration-300 ${activeSection === item.toLowerCase() ? 'text-cyan-400' : 'text-gray-400 hover:text-white'}`}
              >
                {item}
                {activeSection === item.toLowerCase() && (
                  <motion.span
                    layoutId="navUnderline"
                    className="absolute left-0 bottom-0 w-full h-0.5 bg-cyan-400"
                    transition={{ type: 'spring', bounce: 0.2, duration: 0.6 }}
                  />
                )}
              </button>
            ))}
          </div>
        </div>
      </nav>

      {/* Main content */}
      <main className="pt-24 pb-16">
        {/* Hero section */}
        <section 
          ref={homeRef}
          className="min-h-screen flex flex-col justify-center items-center relative px-6"
        >
          <motion.div
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="relative group"
          >
            <motion.div
              className="relative w-64 h-64 rounded-lg overflow-hidden cursor-pointer"
              whileHover={{ scale: 1.05 }}
              onClick={() => setIsProfileExpanded(true)}
            >
              <div className="absolute inset-0 bg-gradient-to-br from-cyan-500 to-purple-600 opacity-70 rounded-lg blur-xl group-hover:opacity-90 transition-all duration-300" />
              <div className="absolute inset-1 rounded-md overflow-hidden">
                <img 
                  src="/assets/profile.jpg" 
                  alt="Parth Jansari" 
                  className="w-full h-full object-cover"
                />
              </div>
              <div className="absolute inset-0 border-2 border-transparent group-hover:border-cyan-400 rounded-lg transition-all duration-300" />
            </motion.div>

            {/* 3D cube effect */}
            <motion.div
              className="absolute -inset-4 border-2 border-cyan-400 opacity-30 rounded-lg"
              animate={{
                rotateX: [0, 15, 0],
                rotateY: [0, -15, 0],
              }}
              transition={{
                duration: 8,
                repeat: Infinity,
                repeatType: 'reverse',
                ease: 'easeInOut'
              }}
            />
          </motion.div>

          <motion.h1
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3, duration: 0.6 }}
            className="mt-12 text-4xl md:text-5xl font-bold text-center max-w-2xl"
          >
            <span className="bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500">
              Digital Product Designer
            </span>
            <br />
            <span className="text-xl md:text-2xl font-normal text-gray-400">
              & Full-Stack Developer
            </span>
          </motion.h1>

          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.6, duration: 0.6 }}
            className="mt-8 flex flex-wrap justify-center gap-4"
          >
            <button className="px-6 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-full font-medium hover:shadow-lg hover:shadow-cyan-500/30 transition-all duration-300">
              Download Resume
            </button>
            <button 
              onClick={() => scrollToSection(contactRef)}
              className="px-6 py-3 border border-cyan-400 text-cyan-400 rounded-full font-medium hover:bg-cyan-400 hover:bg-opacity-10 hover:shadow-lg hover:shadow-cyan-400/20 transition-all duration-300"
            >
              Hire Me
            </button>
          </motion.div>

          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 1, duration: 1 }}
            className="absolute bottom-10 left-1/2 transform -translate-x-1/2"
          >
            <div className="animate-bounce w-6 h-6 border-r-2 border-b-2 border-cyan-400 transform rotate-45" />
          </motion.div>
        </section>

        {/* About section */}
        <section 
          ref={aboutRef}
          className="min-h-screen py-20 px-6 flex flex-col justify-center"
        >
          <div className="container mx-auto max-w-5xl">
            <motion.h2
              initial={{ opacity: 0, x: -50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.5 }}
              viewport={{ once: true }}
              className="text-3xl md:text-4xl font-bold mb-12"
            >
              <span className="text-cyan-400">#</span> {aboutTitle}
            </motion.h2>

            <div className="grid md:grid-cols-2 gap-12">
              <motion.div
                initial={{ opacity: 0, y: 50 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <h3 className="text-2xl font-bold mb-6">Professional Summary</h3>
                <p className="text-gray-300 leading-relaxed mb-6">
                  Hi, I'm Parth Jansari ‚Äî a passionate digital product designer and full-stack developer with 8+ years of experience creating beautiful, functional digital experiences. I specialize in bridging the gap between design and technology to deliver seamless user experiences.
                </p>
                <p className="text-gray-300 leading-relaxed mb-6">
                  My approach combines aesthetic sensibility with technical expertise, ensuring that every project not only looks stunning but performs flawlessly across all devices and platforms.
                </p>
                <div className="flex flex-wrap gap-2 mt-8">
                  <span className="px-3 py-1 bg-gray-800 rounded-full text-sm">UI/UX Design</span>
                  <span className="px-3 py-1 bg-gray-800 rounded-full text-sm">Frontend Development</span>
                  <span className="px-3 py-1 bg-gray-800 rounded-full text-sm">Product Strategy</span>
                  <span className="px-3 py-1 bg-gray-800 rounded-full text-sm">User Research</span>
                </div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, y: 50 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.2 }}
                viewport={{ once: true }}
              >
                <h3 className="text-2xl font-bold mb-6">Education & Experience</h3>
                <div className="space-y-6">
                  <div className="relative pl-8 border-l-2 border-cyan-400 border-opacity-30">
                    <div className="absolute -left-2 top-0 w-4 h-4 rounded-full bg-cyan-400" />
                    <div className="text-sm text-cyan-400">2021 - 2015</div>
                    <h4 className="text-xl font-bold mt-1">Master of Computer Science</h4>
                    <p className="text-gray-400">Stanford University</p>
                  </div>
                  <div className="relative pl-8 border-l-2 border-purple-400 border-opacity-30">
                    <div className="absolute -left-2 top-0 w-4 h-4 rounded-full bg-purple-400" />
                    <div className="text-sm text-purple-400">2015 - 2017</div>
                    <h4 className="text-xl font-bold mt-1">UI Engineer</h4>
                    <p className="text-gray-400">Google, Mountain View</p>
                  </div>
                  <div className="relative pl-8 border-l-2 border-green-400 border-opacity-30">
                    <div className="absolute -left-2 top-0 w-4 h-4 rounded-full bg-green-400" />
                    <div className="text-sm text-green-400">2017 - Present</div>
                    <h4 className="text-xl font-bold mt-1">Senior Product Designer</h4>
                    <p className="text-gray-400">Freelance & Contract</p>
                  </div>
                </div>
              </motion.div>
            </div>
          </div>
        </section>

        {/* Projects section */}
        <section 
          ref={projectsRef}
          className="min-h-screen py-20 px-6 flex flex-col justify-center"
        >
          <div className="container mx-auto max-w-6xl">
            <motion.h2
              initial={{ opacity: 0, x: -50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.5 }}
              viewport={{ once: true }}
              className="text-3xl md:text-4xl font-bold mb-12"
            >
              <span className="text-purple-400">#</span> {projectsTitle}
            </motion.h2>

            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {projects.map((project, i) => (
                <motion.div
                  key={project.id}
                  initial={{ opacity: 0, y: 50 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: i * 0.1 }}
                  viewport={{ once: true }}
                  whileHover={{ y: -10 }}
                  className="bg-gray-900 bg-opacity-50 rounded-xl overflow-hidden border border-gray-800 hover:border-purple-400 transition-all duration-300 group"
                >
                  <div className="relative h-48 overflow-hidden">
                    <img 
                      src={project.image} 
                      alt={project.title} 
                      className="w-full h-full object-cover transition-all duration-500 group-hover:scale-110"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black via-transparent to-transparent opacity-70" />
                  </div>
                  <div className="p-6">
                    <h3 className="text-xl font-bold mb-2">{project.title}</h3>
                    <p className="text-gray-400 mb-4">{project.description}</p>
                    <div className="flex flex-wrap gap-2">
                      {project.technologies.map((tech, i) => (
                        <span key={i} className="px-2 py-1 bg-gray-800 rounded text-xs">
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Skills section */}
        <section 
          ref={skillsRef}
          className="min-h-screen py-20 px-6 flex flex-col justify-center"
        >
          <div className="container mx-auto max-w-5xl">
            <motion.h2
              initial={{ opacity: 0, x: -50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.5 }}
              viewport={{ once: true }}
              className="text-3xl md:text-4xl font-bold mb-12"
            >
              <span className="text-green-400">#</span> {skillsTitle}
            </motion.h2>

            <div className="grid md:grid-cols-2 gap-12">
              <motion.div
                initial={{ opacity: 0, y: 50 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <h3 className="text-2xl font-bold mb-8">Technical Skills</h3>
                <div className="space-y-6">
                  {techSkills.map((skill, i) => (
                    <div key={i} className="relative">
                      <div className="flex justify-between mb-2">
                        <span className="font-medium">{skill.name}</span>
                        <span className="text-cyan-400">{skill.level}%</span>
                      </div>
                      <div className="h-2 bg-gray-800 rounded-full overflow-hidden">
                        <motion.div
                          initial={{ width: 0 }}
                          whileInView={{ width: `${skill.level}%` }}
                          transition={{ duration: 1, delay: i * 0.1 }}
                          viewport={{ once: true }}
                          className="h-full bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full"
                        />
                      </div>
                    </div>
                  ))}
                </div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, y: 50 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.2 }}
                viewport={{ once: true }}
              >
                <h3 className="text-2xl font-bold mb-8">Soft Skills</h3>
                <div className="grid grid-cols-2 gap-4">
                  {softSkills.map((skill, i) => (
                    <motion.div
                      key={i}
                      initial={{ opacity: 0, scale: 0.8 }}
                      whileInView={{ opacity: 1, scale: 1 }}
                      transition={{ duration: 0.5, delay: i * 0.1 }}
                      viewport={{ once: true }}
                      whileHover={{ scale: 1.05 }}
                      className="p-4 bg-gray-900 bg-opacity-50 rounded-lg border border-gray-800 flex flex-col items-center text-center"
                    >
                      <span className="text-2xl mb-2">{skill.icon}</span>
                      <span className="font-medium">{skill.name}</span>
                    </motion.div>
                  ))}
                </div>
              </motion.div>
            </div>

            <motion.div
              initial={{ opacity: 0 }}
              whileInView={{ opacity: 1 }}
              transition={{ duration: 1 }}
              viewport={{ once: true }}
              className="mt-20"
            >
              <h3 className="text-2xl font-bold mb-8 text-center">Testimonials</h3>
              <div className="relative h-64">
                {testimonials.map((testimonial, i) => (
                  <motion.div
                    key={testimonial.id}
                    initial={{ opacity: 0, x: i % 2 === 0 ? 100 : -100 }}
                    animate={{ 
                      opacity: i === 0 ? 1 : 0.2,
                      x: 0,
                      scale: i === 0 ? 1 : 0.9
                    }}
                    transition={{ duration: 0.5 }}
                    className={`absolute inset-0 bg-gray-900 bg-opacity-50 rounded-xl p-8 border ${i === 0 ? 'border-cyan-400' : 'border-gray-800'}`}
                  >
                    <div className="flex items-center mb-6">
                      <div className="w-12 h-12 rounded-full overflow-hidden mr-4">
                        <img 
                          src={testimonial.image} 
                          alt={testimonial.name} 
                          className="w-full h-full object-cover"
                        />
                      </div>
                      <div>
                        <h4 className="font-bold">{testimonial.name}</h4>
                        <p className="text-sm text-gray-400">{testimonial.role}</p>
                      </div>
                    </div>
                    <p className="text-gray-300 italic">"{testimonial.quote}"</p>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          </div>
        </section>

        {/* Contact section */}
        <section 
          ref={contactRef}
          className="min-h-screen py-20 px-6 flex flex-col justify-center"
        >
          <div className="container mx-auto max-w-5xl">
            <motion.h2
              initial={{ opacity: 0, x: -50 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.5 }}
              viewport={{ once: true }}
              className="text-3xl md:text-4xl font-bold mb-12"
            >
              <span className="text-cyan-400">#</span> {contactTitle}
            </motion.h2>

            <div className="grid md:grid-cols-2 gap-12">
              <motion.div
                initial={{ opacity: 0, y: 50 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <h3 className="text-2xl font-bold mb-6">Get In Touch</h3>
                <p className="text-gray-300 mb-8">
                  Have a project in mind or want to discuss potential opportunities? Feel free to reach out ‚Äî I'm always open to interesting collaborations.
                </p>
                
                <div className="space-y-4">
                  <div className="flex items-start">
                    <div className="text-cyan-400 mr-4 mt-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                      </svg>
                    </div>
                    <div>
                      <h4 className="font-bold">Email</h4>
                      <a href="mailto:parth@jansari.com" className="text-gray-400 hover:text-cyan-400 transition-colors">parth@jansari.com</a>
                    </div>
                  </div>
                  <div className="flex items-start">
                    <div className="text-purple-400 mr-4 mt-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                      </svg>
                    </div>
                    <div>
                      <h4 className="font-bold">Phone</h4>
                      <a href="tel:+11234567890" className="text-gray-400 hover:text-purple-400 transition-colors">+1 (123) 456-7890</a>
                    </div>
                  </div>
                  <div className="flex items-start">
                    <div className="text-green-400 mr-4 mt-1">
                      <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                      </svg>
                    </div>
                    <div>
                      <h4 className="font-bold">Location</h4>
                      <p className="text-gray-400">San Francisco, CA</p>
                    </div>
                  </div>
                </div>

                <div className="mt-12">
                  <h4 className="font-bold mb-4">Follow Me</h4>
                  <div className="flex space-x-4">
                    <a href="#" className="w-10 h-10 rounded-full bg-gray-800 flex items-center justify-center hover:bg-cyan-400 hover:text-black transition-all duration-300">
                      <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path fillRule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clipRule="evenodd" />
                      </svg>
                    </a>
                    <a href="#" className="w-10 h-10 rounded-full bg-gray-800 flex items-center justify-center hover:bg-blue-500 transition-all duration-300">
                      <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path fillRule="evenodd" d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z" clipRule="evenodd" />
                      </svg>
                    </a>
                    <a href="#" className="w-10 h-10 rounded-full bg-gray-800 flex items-center justify-center hover:bg-blue-400 transition-all duration-300">
                      <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84" />
                      </svg>
                    </a>
                    <a href="#" className="w-10 h-10 rounded-full bg-gray-800 flex items-center justify-center hover:bg-red-600 transition-all duration-300">
                      <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                        <path fillRule="evenodd" d="M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748 1.15.353.137.882.3 1.857.344 1.023.047 1.351.058 1.807.058h.468c2.456 0 2.784-.011 3.807-.058.975-.045 1.504-.207 1.857-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.047-1.023.058-1.351.058-3.807v-.468c0-2.456-.011-2.784-.058-3.807-.045-.975-.207-1.504-.344-1.857a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z" clipRule="evenodd" />
                      </svg>
                    </a>
                  </div>
                </div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, y: 50 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: 0.2 }}
                viewport={{ once: true }}
                className="bg-gray-900 bg-opacity-50 rounded-xl p-8 border border-gray-800"
              >
                <h3 className="text-2xl font-bold mb-6">Send a Message</h3>
                <form className="space-y-6">
                  <div>
                    <label htmlFor="name" className="block text-sm font-medium mb-2">Name</label>
                    <input 
                      type="text" 
                      id="name" 
                      className="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent transition-all"
                      placeholder="Your name"
                    />
                  </div>
                  <div>
                    <label htmlFor="email" className="block text-sm font-medium mb-2">Email</label>
                    <input 
                      type="email" 
                      id="email" 
                      className="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent transition-all"
                      placeholder="your.email@example.com"
                    />
                  </div>
                  <div>
                    <label htmlFor="message" className="block text-sm font-medium mb-2">Message</label>
                    <textarea 
                      id="message" 
                      rows="4" 
                      className="w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent transition-all"
                      placeholder="Your message here..."
                    ></textarea>
                  </div>
                  <button 
                    type="submit"
                    className="w-full px-6 py-3 bg-gradient-to-r from-cyan-500 to-blue-600 rounded-lg font-medium hover:shadow-lg hover:shadow-cyan-500/30 transition-all duration-300"
                  >
                    Send Message
                  </button>
                </form>
              </motion.div>
            </div>
          </div>
        </section>
      </main>

      {/* Footer */}
      <footer className="bg-black bg-opacity-80 py-8 px-6 border-t border-gray-800">
        <div className="container mx-auto">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="text-gray-400 text-sm mb-4 md:mb-0">
              ¬© {new Date().getFullYear()} Parth Jansari. All rights reserved.
            </div>
            <div className="flex space-x-6">
              {['About', 'Projects', 'Skills', 'Contact'].map((item) => (
                <button
                  key={item}
                  onClick={() => scrollToSection(
                    item === 'About' ? aboutRef :
                    item === 'Projects' ? projectsRef :
                    item === 'Skills' ? skillsRef : contactRef
                  )}
                  className="text-gray-400 hover:text-cyan-400 text-sm transition-colors"
                >
                  {item}
                </button>
              ))}
            </div>
          </div>
        </div>
      </footer>

      {/* Profile image modal */}
      <AnimatePresence>
        {isProfileExpanded && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black bg-opacity-90 z-50 flex items-center justify-center p-4"
            onClick={() => setIsProfileExpanded(false)}
          >
            <motion.div
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.8, opacity: 0 }}
              transition={{ type: 'spring', bounce: 0.3 }}
              className="relative max-w-4xl w-full"
              onClick={(e) => e.stopPropagation()}
            >
              <img 
                src="/assets/profile.jpg" 
                alt="Parth Jansari" 
                className="w-full h-auto max-h-[90vh] object-contain rounded-lg"
              />
              <button 
                onClick={() => setIsProfileExpanded(false)}
                className="absolute -top-4 -right-4 bg-gray-900 rounded-full w-10 h-10 flex items-center justify-center hover:bg-cyan-500 transition-all duration-300 border border-gray-700"
              >
                <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
};

export default MyPortfolio;





Create a comprehensive CSS stylesheet that implements a futuristic dark theme with neon glow effects for Parth Jansari's portfolio. The styling must exactly match the interactive elements and animations from the React component, with special attention to:

Color Scheme:

Primary background: #0D0D0D (near-black)

Neon accents:

Cyan: #00f0ff with text-shadow: 0 0 10px #00f0ff80

Purple: #ff00f0 with glow effect

Green: #00ff7f for highlights

Text: #ffffff with secondary text at #b3b3b3

Typography:

Primary font: 'Poppins' (semi-bold for headings, regular for body)

Secondary font: 'Orbitron' for futuristic elements

Smooth font rendering with antialiased and subpixel-antialiased fallback

Glow/Neon Effects:

Implement multi-layer glow using box-shadow:

Layer 1: 0 0 5px [color]

Layer 2: 0 0 15px [color]

Layer 3: 0 0 30px [color]80 (with transparency)

Animated pulsing glow for interactive elements

Scrollbar Styling:

Custom slim scrollbar (4px wide) with glow track

Thumb color: linear-gradient(to bottom, #00f0ff, #ff00f0)

3D Cube Animation:

Profile image container with rotating border animation

Perspective effect with transform-style: preserve-3d

Smooth cubic-bezier timing function (cubic-bezier(0.68, -0.55, 0.265, 1.55))

Skill Bars:

Animated gradient fill (cyan to purple)

Glow effect when animation completes

Precision percentage indicators

Section Transitions:

Parallax effect on scroll

Opacity fade between sections (0.2 ‚Üí 1 ‚Üí 0.2)

Smooth transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1)

Form Styling:

Glass-morphism inputs with backdrop-filter: blur(12px)

Focus states with intense glow (box-shadow: 0 0 0 2px #00f0ff40, 0 0 20px #00f0ff80)

Mobile Responsiveness:

Breakpoints at 768px and 1024px

Stacked layout for mobile with adjusted glow intensities

Touch-friendly tap targets (min 48√ó48px)

Performance Optimizations:

will-change properties for animated elements

Hardware acceleration with transform: translateZ(0)

Reduced motion media query alternative styles

Specific Requirements:

All hover states must have smooth transitions (300ms)

Focus states visible for accessibility

Particle animations should use CSS transforms (not blocking)

Backdrop filters for frosted glass effects where needed

Vendor prefixes for full browser support

Custom scroll-snap behavior for section stopping points